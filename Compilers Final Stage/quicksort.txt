decl
	int a[16];
	int partition(int p,int r);
	bool quicksort(bool z, int p,int r);
	int swap(int &x,int &y);
enddecl

int swap(int &x,int &y){
	decl
		int temp;
	enddecl
	begin
		temp = x;
		x = y;
		y = temp;
		return 1;
	end
}

int partition(int p,int r) {
	decl
		int x,i,j,dummy;
	enddecl
	begin
		x = a[r];
		i = p-1;
		j = p;
		while(j<r) do
			if (a[j]<=x) then
				i = i + 1;
				dummy = swap(a[i],a[j]);
			endif;
			j=j+1;
		endwhile;
		dummy=swap(a[i+1],a[r]);
		return i+1;
	end
}

bool quicksort(bool z,int p,int r) {
	decl
		int q;
		bool dummy;
	enddecl
	begin
		if(p<r) then
			q = partition(p,r);
			dummy = quicksort(quicksort(true, p, q-1),q+1,r);
		endif;
		return true;
	end
}

int main() {
	decl
		int i;
		bool temp;
	enddecl
	begin
		i = 1;
		while(i<=15) do
			a[i] = 16-i;
			i = i + 1;
		endwhile;
		i=1;
		while(i<=15) do
			write(a[i]);
			i=i+1;
		endwhile;
		temp = quicksort(true, 1, 15);
		
		i = 1;
		while(i<=15) do
			write(a[i]);
			i = i + 1;
		endwhile;
		return 1;
	end
}
exit
